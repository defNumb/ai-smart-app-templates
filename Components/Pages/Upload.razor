@page "/onboarding"
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Http
@using System.IO
@using OfficeOpenXml;
@using System.Linq;
@using System.Text;
@using AutoMapper;

@*
  *********** DATA UPLOAD COMPONENT *****************
  Developed by: Sam Espinoza
  Company: Excelligence Learning Corp.
  Last worked on by: Sam Espinoza     <--- update this when you change something
  Last date worked on: 2/8/2024       <--- update this accordingly

  This component allows users to input database connection details, select a file (CSV or Excel), and upload it for processing.
  "Upload.razor" contains the HTML (front end code) of this page (Upload).
  "Upload.razor.cs" contains the Logic (back end code) of this page.
*@


<PageTitle>Onboarding</PageTitle>
<h3>Start Onboarding</h3>
<p style="word-wrap: break-word; max-width: 100%">Welcome to the <strong>Client Onboarding Portal</strong>, designed to streamline the setup for the <strong>punchout process</strong> for new clients. This intuitive interface simplifies the onboarding journey, requiring no manual database specifications as all necessary databases are <strong>pre-configured</strong>. For added convenience, a <strong>Database Connection Test Tool</strong> is available, allowing you to verify connectivity effortlessly (optional). </p>
<div style="display: flex; justify-content: space-between; align-items: start; width: 100%; margin-bottom: 20px;">
    <!-- File Selectors, HoldCode, and Processor in a single container on the left -->
    <div style="padding: 10px; background-color: #f5f5f5; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); width: 50%;">
        <h5>Create and Update database records</h5>
        <div class="form-group">
            <label style="font-size: 14px;">Select a file to upload (Excel):</label>
            <InputFile OnChange="HandleFileSelected" />
        </div>
       
        <div class="form-group" style="margin-top: 10px;">
            <label style="display: block; margin-bottom: 5px; font-weight: bold; font-size: 14px;"> HoldCode: <span style="color: red; font-weight: bold; font-size: 12px;">Required *</span> </label>
            <div style="font-size: 14px;">
                <input type="radio" id="holdCodeYes" name="holdCode" value="Y" @onchange="(e) => HoldCode = e.Value.ToString()" checked="@HoldCode.Equals('Y')">
                <label for="holdCodeYes">Y</label>
                <input type="radio" id="holdCodeNo" name="holdCode" value="N" @onchange="(e) => HoldCode = e.Value.ToString()" style="margin-left: 5px;" checked="@HoldCode.Equals('N')">
                <label for="holdCodeNo">N</label>
            </div>
        </div>
        <div class="form-group" style="margin-top: 10px;">
            <label style="display: block; margin-bottom: 5px; font-weight: bold; font-size: 14px;"> Select Purchase Order Processor: <span style="color: red; font-weight: bold; font-size: 12px;">Required *</span> </label>
            <input list="processors" @bind="Processor" style="width: 100%; padding: 5px; border: 1px solid #ccc; border-radius: 4px;">
            <datalist id="processors">
                <option value="Generic_PurchaseOrder"></option>
                <!-- Add more predefined processors as needed -->
            </datalist>
        </div>
        <!-- Button to trigger the file upload process -->
        <button class="btn btn-primary" style="margin-top: 10px; padding: 5px 10px; font-size: 14px;" @onclick="UploadFile">Upload records to SQL</button>
    </div>
    <!--  IMPEX SECTION-->
    <div style="padding: 10px; background-color: #f5f5f5; height: 286px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); width: 50%; margin-left: 10px;margin-right: 10px;">
        <h5>Select Image and Upload Impex files</h5>
        <div class="form-group" style="margin-top: 10px;">
            <label style="font-size: 14px;">Select an image to upload: <span style="color: red; font-weight: bold; font-size: 12px;">Required *</span></label>
            <InputFile OnChange="HandleImageSelected" />
        </div>
        @if (!string.IsNullOrEmpty(imageBase64String))
        {
            <div style="padding: 10px;">
                <label style="font-size: 14px;">Image Preview:</label>
                <img src="@imageBase64String" alt="Selected Image Preview" style="max-width: 100%; max-height: 200px; height: auto;" />
            </div>
        }
  
        <button class="btn btn-primary" style="margin-top: 10px; padding: 5px 10px; font-size: 14px;" @onclick="UploadImpexFiles">Upload Impex Records to Hybris</button>

    </div>
    <!-- END OF IMPEX SECTION -->
    <!-- Optional Input Fields on the right -->
    <div style="width: 250px; height: 300px; border: 1px solid black; box-shadow: 0px 0px 5px rgba(0,0,0,0.5); padding: 10px; display: flex; flex-direction: column; justify-content: start; align-items: center;">
        <h3 style="margin-top: 0; margin-bottom: 5px; font-size: 16px;">Test Database Connection <span style="font-size: 12px; color: red;">*optional</span></h3>
        <div class="form-group" style="padding-top: 5px; width: 100%;">
            <label for="serverName" style="font-size: 14px;">Server Name:</label>
            <input @bind="serverName" class="form-control" id="serverName" placeholder="Enter server name" style="margin-bottom: 5px; font-size: 14px;" />
        </div>
        <div class="form-group" style="width: 100%;">
            <label for="databaseName" style="font-size: 14px;">Database Name:</label>
            <input @bind="databaseName" class="form-control" id="databaseName" placeholder="Enter database name" style="margin-bottom: 5px; font-size: 14px;" />
        </div>
        <div class="form-group" style="width: 100%;">
            <label for="tableName" style="font-size: 14px;">Table Name: <span style="font-size: 12px; color: red;">*optional*</span></label>
            <input @bind="tableName" class="form-control" id="tableName" placeholder="Enter table name" style="margin-bottom: 5px; font-size: 14px;" />
        </div>
        <button class="btn btn-secondary" style="margin-top: 5px; padding: 5px 10px; font-size: 14px;" @onclick="TestDatabaseConnection">Test Connection</button>
    </div>
</div>

@if (userMessages.Any())
{
    <div class="mt-3" style="margin: 10px auto; padding: 10px; max-width: 60vw; background-color: #f0f0f0; color: #333; box-sizing: border-box; overflow-y: auto; border-radius: 6px; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); max-height: 200px;">
        <label style="margin-bottom: 5px; display: block; font-weight: bold; color: #0056b3; font-size: 14px;">Output Message:</label>
        <div class="form-control preview-console" style="background-color: #f0f0f0; color: #333; border: 1px solid #ccc; overflow-y: auto; font-family: 'Consolas', 'Courier New', monospace; border-radius: 4px; font-size: 12px;">
            @foreach (var message in userMessages)
            {
                <div>@message</div>
            }
        </div>
    </div>
}
@* Conditionally rendered message box to display the output of the upload process or any errors encountered. *@
@if (!string.IsNullOrEmpty(filePreview))
{
    <div class="mt-3" style="margin: 10px auto; padding: 10px; max-width: 80vw; background-color: #f0f0f0; color: #333; box-sizing: border-box; overflow-x: auto; border-radius: 6px; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);">
        <label style="margin-bottom: 5px; display: block; font-weight: bold; color: #0056b3; font-size: 14px;">File Preview:</label>
        <div class="form-control preview-console" style="white-space: pre-wrap; background-color: #f0f0f0; color: #333; border: 1px solid #ccc; overflow-x: auto; font-family: 'Consolas', 'Courier New', monospace; border-radius: 4px; font-size: 12px;">
            @((MarkupString)filePreview)
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(userMessage))
{
    <div class="mt-3" style="margin: 10px auto; padding: 10px; max-width: 80vw; background-color: #f0f0f0; color: #333; box-sizing: border-box; border-radius: 6px; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);">
        <div style="display: flex;">

            <!-- First inner div with max-height and auto overflow -->
            <div style="flex: 1; margin-right: 10px; max-height: 650px; overflow-x: auto; overflow-y: auto;">
                <label style="margin-bottom: 5px; display: block; font-weight: bold; color: #0056b3; font-size: 14px;">Generated Records:</label>
                <div class="form-control preview-console" style="white-space: normal; background-color: #f0f0f0; color: #333; border: 1px solid #ccc; font-family: 'Consolas', 'Courier New', monospace; border-radius: 4px; font-size: 12px;">
                    @((MarkupString)userMessage)
                </div>
            </div>
            <!-- Second inner div -->
            @if (!string.IsNullOrEmpty(impexMessage))
            {
                <div style="flex: 1; overflow-x: auto;">
                    @if (ImpexUploaded == false)
                    {
                        <label style="margin-bottom: 5px; display: block; font-weight: bold; color: #0056b3; font-size: 14px;">Generated Impex Preview (Not Uploaded):</label>
                    } 
                    else
                    {
                        <label style="margin-bottom: 5px; display: block; font-weight: bold; color: #0056b3; font-size: 14px;">Generated Impex Preview (Successfully Uploaded):</label>
                    }
                    <div class="form-control preview-console" style="white-space: normal; background-color: #f0f0f0; color: #333; border: 1px solid #ccc; font-family: 'Consolas', 'Courier New', monospace; border-radius: 4px; font-size: 12px;">
                        @((MarkupString)impexMessage)
                    </div>
                </div>
            }
        </div>
    </div>
}


@code {
    @* CODE IS LOCATED IN "Upload.razor.cs" *@
   
}